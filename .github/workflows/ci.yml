name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  quality:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    - name: Set Environment Variables
      run: |
        echo "LOG_LEVEL=DEBUG" >> $GITHUB_ENV
        echo "LOG_FILE_PATH=/tmp/omero_screen.log" >> $GITHUB_ENV
        echo "HOST=localhost" >> $GITHUB_ENV
        echo "USERNAME=helfrid" >> $GITHUB_ENV

    - name: Lint with Ruff
      run: uv run ruff check .

    - name: Format with Ruff
      run: uv run ruff format --check .

    - name: Type check with mypy
      run: uv run mypy src

    - name: Check if tests exist
      id: check_tests
      run: |
        if [ -d "tests" ] && [ -n "$(ls -A tests 2>/dev/null)" ]; then
          echo "has_tests=true" >> $GITHUB_OUTPUT
        else
          echo "has_tests=false" >> $GITHUB_OUTPUT
        fi

    - name: Create environment files for testing
      run: |
        # Create .env.development
        cat > .env.development << EOL
        LOG_LEVEL=DEBUG
        HOST=localhost
        USERNAME=helfrid
        LOG_FILE_PATH=/tmp/omero_screen.log
        EOL

        # Create .env.production
        cat > .env.production << EOL
        LOG_LEVEL=WARNING
        HOST=ome2.hpc.sussex.ac.uk
        USERNAME=prod-user
        LOG_FILE_PATH=/var/log/omero_screen.log
        EOL

        # Create minimal .env file
        if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
          echo "ENV=production" > .env
        else
          echo "ENV=development" > .env
        fi

    - name: Run tests
      if: steps.check_tests.outputs.has_tests == 'true'
      run: uv run pytest tests/ -v --ignore=tests/e2e
