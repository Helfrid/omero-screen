name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Lint with Ruff
      run: uv run ruff check .

    - name: Format with Ruff
      run: uv run ruff format --check .

    - name: Type check with mypy
      run: uv run mypy src

    - name: Check if tests exist
      id: check_tests
      run: |
        if [ -d "tests" ] && [ -n "$(ls -A tests 2>/dev/null)" ]; then
          echo "has_tests=true" >> $GITHUB_OUTPUT
        else
          echo "has_tests=false" >> $GITHUB_OUTPUT
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create environment file
      run: |
        cat > .env.development << EOF
        ENV=development
        USERNAME=root
        PASSWORD=omero
        HOST=localhost
        PROJECT_ID=151
        DATA_PATH=omero-napari-data_tests
        LOG_LEVEL=DEBUG
        LOG_FILE_PATH=logs/app.log
        LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(filename)s:%(lineno)d - %(message)s
        ENABLE_CONSOLE_LOGGING=True
        ENABLE_FILE_LOGGING=False
        LOG_MAX_BYTES=1048576
        LOG_BACKUP_COUNT=5
        EOF

    - name: Start OMERO server and run tests
      run: |
        docker compose up -d database
        sleep 30  # Wait for database
        docker compose up -d omeroserver
        docker compose logs omeroserver  # Let's see the logs
        sleep 240  # Wait for OMERO
        # Run tests and capture exit code
        if ! uv run pytest tests/ -v --ignore=tests/e2e_tests/; then
          echo "Tests failed"
          exit 1
        fi

    - name: Cleanup
      if: always()
      run: docker compose down -v
